@startuml Sequence
participant Client
box  Infra 
  participant UserController as  "Controller:\nUser"
  participant Database as  "DB:\nDatabase"
  participant SQLAlchemyUserRepository as  "Repo:\nSQL User"
end box

box Itf
  participant UserRepository as  "Repo:\nUser Repository"
end box

box Apps
    ' participant UserRepository as  "Usecase:\nSave User"
  participant CreateUserUseCase as  "Usecase:\nCreate User"
  participant UserDTO as  "DTO:\nUser DTO"
end box

box Domain
  participant User as  "User"
  participant Email as  "Email"
end box


Client -> UserController: POST /users/ {name, email} 
activate UserController

UserController -> CreateUserUseCase: execute(name, email) 
activate CreateUserUseCase

CreateUserUseCase <-> Email: Create Email(value=email) 
CreateUserUseCase <-> User: Create User(id=0, name, email) 

CreateUserUseCase -> UserRepository: save(user) 
activate UserRepository

UserRepository -> SQLAlchemyUserRepository: save(user) 
activate SQLAlchemyUserRepository

SQLAlchemyUserRepository -> Database: Insert UserModel(name, email) 
activate Database 
Database --> SQLAlchemyUserRepository: Return generated ID 
deactivate Database

SQLAlchemyUserRepository -> SQLAlchemyUserRepository: Set user.id = generated ID 
SQLAlchemyUserRepository --> UserRepository: 
deactivate SQLAlchemyUserRepository

UserRepository --> CreateUserUseCase: 
deactivate UserRepository

CreateUserUseCase -> UserDTO: Create UserDTO(id, name, email) 
activate UserDTO
UserDTO->CreateUserUseCase: Return UserDTO
deactivate  UserDTO

CreateUserUseCase --> UserController: Return UserDTO 
deactivate CreateUserUseCase

UserController --> Client: Return UserDTO (JSON response) 
deactivate UserController
@enduml